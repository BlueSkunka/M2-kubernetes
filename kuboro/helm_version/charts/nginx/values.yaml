# Default values for test.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
images:
  initContainer:
    repository: oroinc/orocommerce-application
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "6.1.0"
  container:
    repository: oroinc/runtime
    # This sets the pull policy for images.
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "6.1-latest"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

podSecurityContext:
  runAsUser: 2002
  runAsGroup: 2001

initSecurityContext: 
  runAsUser: 0

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

tls:
  secretName: orocommerce-tls

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: true
  className: "nginx"
  hosts:
    - host: oro.demo
      paths:
        - path: /
          pathType: Prefix
  tls: 
   - secretName: orocommerce-tls
     hosts:
       - oro.demo

resources:
  requests:
      memory: "500Mi"
      cpu: "500m"
  limits:
    memory: "1000Mi"
    cpu: "1000m"

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
      path: /
      port: 80
  initialDelaySeconds: 15
  periodSeconds: 5
  timeoutSeconds: 30
readinessProbe:
  httpGet:
      path: /
      port: 80
  initialDelaySeconds: 15
  periodSeconds: 5
  timeoutSeconds: 30

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
